{"version":3,"sources":["redux/reducers/cryptoReducers.js","components/Logos.js","components/Links.js","components/BackButton.js","components/InsideInfo.js","components/Routes.js","App.js","redux/configureStore.js","index.js"],"names":["loadCrypto","createAsyncThunk","a","fetch","method","mode","result","json","res","crypto","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer","combineReducers","value","Logos","logoUrl","rank","className","src","alt","Links","useSelector","useState","filter","setFilter","i","colorBool","bgColor","List","elem","toString","toLowerCase","includes","map","to","id","logo_url","type","placeholder","onChange","event","target","BackButton","history","useHistory","handleClick","goBack","role","onClick","onKeyPress","e","keyCode","handleKey","tabIndex","InsideInfo","supply","price","status","RoutesAndElements","StateList","path","circulating_supply","App","dispatch","useDispatch","useEffect","basename","exact","Routes","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d9e4e1b.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nconst loadCrypto = createAsyncThunk('fetchData',\n  async () => {\n    const result = await fetch('https://api.nomics.com/v1/currencies/ticker?key=d4a4c47a532e48347da5501fd19f66e912b4bc09&gdax&per-page=100&interval=1dgdax&interval=1d&per-page=20', { method: 'GET', mode: 'cors' });\n    const res = await result.json();\n    return res;\n  });\n\nconst crypto = createSlice({\n  name: 'values',\n  initialState: [],\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(loadCrypto.fulfilled, (state, action) => action.payload);\n  },\n});\n\nconst reducer = combineReducers({\n  value: crypto.reducer,\n});\n\nexport { reducer, loadCrypto };\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nconst Logos = ({ name, logoUrl, rank }) => (\n  <div className=\"link-div d-flex align-items-center h-100\">\n    <img src={logoUrl} alt=\"img\" className=\"home-links-img h-50 w-50\" />\n    <div className=\"mx-1\">\n      <h5 className=\"home-links-text\">{name}</h5>\n      <h6 className=\"home-links-text\">\n        Rank:\n        {rank}\n      </h6>\n    </div>\n  </div>\n);\n\nLogos.propTypes = {\n  name: PropTypes.string.isRequired,\n  logoUrl: PropTypes.string.isRequired,\n  rank: PropTypes.string.isRequired,\n};\n\nexport default Logos;\n","import { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Logos from './Logos';\n\nconst Links = () => {\n  const state = useSelector((state) => state);\n  const [filter, setFilter] = useState('');\n  let i = 1;\n  let colorBool = true;\n  let bgColor = 'light-blue';\n\n  const List = ((state.value).filter((elem) => {\n    if (filter === '') {\n      return elem;\n    }\n    if (elem.name.toString().toLowerCase().includes(filter.toString().toLowerCase())) {\n      return elem;\n    }\n    return '';\n  })).map((elem) => {\n    if (i === 2) {\n      colorBool = !colorBool;\n      if (colorBool) {\n        bgColor = 'light-blue';\n        i = 0;\n      } else {\n        bgColor = 'dark-blue';\n        i = 0;\n      }\n    }\n    i += 1;\n\n    return (\n      <Link key={elem.id} to={elem.id} className={`text-decoration-none col-6 home-links ${bgColor}`}>\n        <Logos name={elem.name} logoUrl={elem.logo_url} rank={elem.rank} />\n      </Link>\n    );\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-6 home-links dark-blue d-flex justify-content-center align-items-center\">\n        <h3 className=\"home-links-text\">TOP 100 Crypto Currencies</h3>\n      </div>\n      <div className=\"col-6 home-links light-blue d-flex flex-column justify-content-center\">\n        <h3 className=\"text-white\">Search by name</h3>\n        <input type=\"text\" placeholder=\"Search...\" onChange={(event) => { setFilter(event.target.value); }} />\n      </div>\n      {List}\n    </div>\n  );\n};\n\nexport default Links;\n","import React from 'react';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { useHistory } from 'react-router';\n\nconst BackButton = () => {\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.goBack();\n  };\n\n  const handleKey = (e) => {\n    if (e.keyCode === 8) { handleClick(); }\n  };\n\n  return (\n    <div className=\"header-button align-self-start m-3\">\n      <div\n        className=\"back-btn\"\n        role=\"button\"\n        onClick={() => handleClick()}\n        onKeyPress={(e) => handleKey(e)}\n        tabIndex=\"0\"\n      >\n        <ArrowBackIosIcon />\n      </div>\n    </div>\n  );\n};\n\nexport default BackButton;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport BackButton from './BackButton';\n\nconst InsideInfo = ({\n  supply, logoUrl, price, rank, status, name,\n}) => (\n  <div className=\"dark-blue d-flex flex-column align-items-center\">\n    <BackButton />\n    <img src={logoUrl} alt=\"img\" className=\"h-25 w-25 d-block my-2 px-3\" />\n    <h1 className=\"text-white\">{name}</h1>\n    <span className=\"d-flex justify-content-between w-100 px-3\">\n      <h2 className=\"text-white\">Rank:</h2>\n      {' '}\n      <h2 className=\"text-white\">\n        <b>\n          {' '}\n          {rank}\n        </b>\n        {' '}\n      </h2>\n    </span>\n    <span className=\"d-flex justify-content-between w-100 px-3\">\n      <h4 className=\"text-white\">Price: </h4>\n      {' '}\n      <h4 className=\"text-white\">\n        <b>\n          {' '}\n          {price}\n        </b>\n        {' '}\n      </h4>\n    </span>\n    <span className=\"d-flex justify-content-between w-100 px-3\">\n      <h5 className=\"text-white\">Circulating Supply:</h5>\n      {' '}\n      <h5 className=\"text-white\">{supply}</h5>\n    </span>\n    <div className=\"text-white d-flex justify-content-between w-100 px-3\">\n      Status:\n      {' '}\n      <b>\n        {status}\n      </b>\n      {' '}\n    </div>\n  </div>\n);\n\nInsideInfo.propTypes = {\n  supply: PropTypes.string.isRequired,\n  logoUrl: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  rank: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default InsideInfo;\n","import { Route } from 'react-router-dom';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport InsideInfo from './InsideInfo';\n\nconst RoutesAndElements = () => {\n  const state = useSelector((state) => state);\n\n  const StateList = (state.value).map((elem) => (\n    <Route key={elem.id} path={`/${elem.id}`}>\n      <InsideInfo\n        name={elem.name}\n        supply={elem.circulating_supply}\n        logoUrl={elem.logo_url}\n        price={elem.price}\n        rank={elem.rank}\n        status={elem.status}\n      />\n    </Route>\n  ));\n\n  return (\n    <div className=\"routes\">\n      {StateList}\n    </div>\n  );\n};\n\nexport default RoutesAndElements;\n","import './App.css';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loadCrypto } from './redux/reducers/cryptoReducers';\nimport Links from './components/Links';\nimport RoutesAndElements from './components/Routes';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadCrypto());\n  }, []);\n\n  return (\n    <div className=\"container-sm\">\n      <Router basename=\"https://igorkol91.github.io/CryptoCurrency/\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Links />\n          </Route>\n          <RoutesAndElements />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer } from './reducers/cryptoReducers';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/configureStore';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}